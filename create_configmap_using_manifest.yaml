
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: create-secrets
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: init-role
rules:
  - apiGroups:
        - ""
        - apps
        - autoscaling
        - batch
        - extensions
        - policy
        - rbac.authorization.k8s.io
    resources:
      - secrets
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: create-secrets-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: init-role
subjects:
  - name: create-secrets
    kind: ServiceAccount
---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-cluster-data
spec:
  template:
    spec:
      serviceAccountName: create-secrets
      containers:
      - name: init-cluster-data
        image: bitnami/kubectl
        volumeMounts:
          - name: secret-store
            mountPath: "/mnt/secrets-store"
            readOnly: true
        env:
          - name: INGRESS_SUBNETS
            valueFrom:
              secretKeyRef:
                name: cluster-subnet-secret
                key: subnets
        command:
          - "bin/bash"
          - "-c"
          - "kubectl create secret generic cluster-subnets --from-literal=subnets='${INGRESS_SUBNETS}' -n {{ .Values.environment }} --dry-run -o yaml | kubectl apply -f -"
      volumes:
        - name: secret-store
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "cluster-subnets"
      restartPolicy: Never
  backoffLimit: 1
